pipeline {
    agent any
    // environment {
    //     // Define any environmental variables
    //     // PATH = '/var/lib/jenkins/workspace'
    //     // PATH = '/home/ubuntu/backend'
    // }
    stages {
        // stage('Set Workspace') {
        //     steps {
        //         script {
        //             def workspaceDir = "/home/ubuntu/backend"
        //             def filesExist = sh(script: "ls -A ${workspaceDir} | wc -l", returnStdout: true).trim().toInteger() > 0
        //             if (filesExist) {
        //                 sh "cd ${workspaceDir} && rm -rf *"
        //             } else {
        //                 echo "No files found in the workspace. Skipping the 'Set Workspace' stage."
        //             }
        //         }
        //     }
        // }
        stage('Checkout') {
            steps {
                cleanWs() // clean workspace.
                echo "Pulling code from SCM..."
                git branch: 'trunk', credentialsId: 'amal-github-pin', url: 'https://github.com/bws-prashanth/gps.git'
            }
        }
        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }
        stage('Build') {
            steps {
                echo 'building'
                // Add any necessary build steps here
                // For example, compiling TypeScript code, bundling assets, etc.
            }
        }
        stage('Check and Kill Port') {
            steps {
                script {
                    def port = 9000 // Replace 9000 with the port number you want to check
                    def portInUse = sh(script: "lsof -i :${port} | awk '{print \$2}' | tail -n +2", returnStdout: true).trim()
                    if (portInUse) {
                        echo "Port ${port} is already in use by process ${portInUse}. Killing the process..."
                        sh(script: "kill -9 ${portInUse}")
                        echo "Process ${portInUse} killed successfully."
                    } else {
                        echo "Port ${port} is available for use."
                    }
                }
            }
        }



        stage('Deploy') {
            steps {
                script {
                    def directory = '/home/ubuntu/backend'

                    // Change the working directory to the specified directory
                    dir(directory) {
                        sh 'ls' // List files in the current directory
                    }

                    def filesExist = sh(script: "ls -A ${directory} | wc -l", returnStdout: true).trim().toInteger() > 0

                    if (filesExist) {
                        sh "rm -rf ${directory}/*" // Delete the contents of the directory
                    } else {
                        echo "${directory} is already empty. Skipping deletion."
                    }

                    dir(directory) {
                        sh 'ls' // List files in the current directory
                    }
                    sh 'mv  * /home/ubuntu/backend' // Copy the updated code to the deployment directory

                    dir(directory) {
                        sh 'ls -lrt'
                        // Start the updated application in the background using nohup
                        sh 'nohup npm start > /dev/null 2>&1 &'
                        // You can also use a custom start command if specified in your package.json script section
                        // For example: sh 'nohup npm run start-prod > /dev/null 2>&1 &'
                        // Make sure that your package.json file has a "start" script defined
                    }
                    // Indicate that the deployment is completed
                    echo 'Deployment completed successfully.'
                }
            }
        }

        // stage('Deploy') {
        //     steps {
        //         script {
        //             def directory = '/home/ubuntu/backend'
        //             // Change the working directory to the specified directory
        //             dir(directory) {
        //                 sh 'ls' // List files in the current directory
        //             }
        //             def filesExist = sh(script: "ls -A ${directory} | wc -l", returnStdout: true).trim().toInteger() > 0
        //             if (filesExist) {
        //                 sh "rm -rf ${directory}/*" // Delete the contents of the directory
        //             } else {
        //                 echo "${directory} is already empty. Skipping deletion."
        //             }
        //             dir(directory) {
        //                 sh 'ls' // List files in the current directory
        //             }
        //             sh 'mv -r * /home/ubuntu/backend' // Copy the updated code to the deployment directory
        //             dir(directory){
        //                 sh 'ls -lrt' 
        //                 // sh 'nohup npm start > /dev/null 2>&1 &'
        //                 sh 'nohup npm start > /home/ubuntu/backend 2>&1 &'
        //             }
        //             // You can also use a custom start command if specified in your package.json script section
        //             // For example: sh 'npm run start-prod'
        //             // Make sure that your package.json file has a "start" script defined
        //         }
        //         // Indicate that the deployment is completed
        //         echo 'Deployment completed successfully.'
        //     }
        // }
    }
    // post {
    //     always {
    //         // Clean up workspace after the build
    //         cleanWs()
    //     }
    // }
}
